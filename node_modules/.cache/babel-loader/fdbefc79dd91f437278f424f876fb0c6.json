{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ninew/todotsx/src/PrivateRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Route } from 'react-router-dom'; //@ts-ignore\n\nexport default function PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  //@ts-ignore\n  function readCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n\n    return null;\n  }\n\n  const token = readCookie('token');\n\n  const authed = () => {\n    if (token !== null || token !== \"\") {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  React.useEffect(() => {\n    authed();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => authed() === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PrivateRoute, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/ninew/todotsx/src/PrivateRoute.tsx"],"names":["React","Redirect","Route","PrivateRoute","component","Component","rest","readCookie","name","nameEQ","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","token","authed","useEffect","props","pathname","state","from","location"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;AACA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AAAA;;AACrE;AACC,WAASC,UAAT,CAAoBC,IAApB,EAAkC;AAC9B,QAAIC,MAAM,GAAGD,IAAI,GAAG,GAApB;AACA,QAAIE,EAAE,GAAGC,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAAT;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAGJ,EAAE,CAACK,MAAnB,EAA0BD,CAAC,EAA3B,EAA+B;AAC3B,UAAIE,CAAC,GAAGN,EAAE,CAACI,CAAD,CAAV;;AACA,aAAOE,CAAC,CAACC,MAAF,CAAS,CAAT,MAAc,GAArB,EAA0BD,CAAC,GAAGA,CAAC,CAACE,SAAF,CAAY,CAAZ,EAAcF,CAAC,CAACD,MAAhB,CAAJ;;AAC1B,UAAIC,CAAC,CAACG,OAAF,CAAUV,MAAV,MAAsB,CAA1B,EAA6B,OAAOO,CAAC,CAACE,SAAF,CAAYT,MAAM,CAACM,MAAnB,EAA0BC,CAAC,CAACD,MAA5B,CAAP;AAChC;;AACD,WAAO,IAAP;AACD;;AACL,QAAMK,KAAK,GAAGb,UAAU,CAAC,OAAD,CAAxB;;AAEE,QAAMc,MAAM,GAAG,MAAM;AACjB,QAAID,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAAhC,EAAoC;AAChC,aAAO,IAAP;AACH,KAFD,MAGK;AACL,aAAO,KAAP;AACC;AAEJ,GARD;;AASApB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AACpBD,IAAAA,MAAM;AACP,GAFD,EAEG,CAACD,KAAD,CAFH;AAGA,sBACE,QAAC,KAAD,OACMd,IADN;AAEE,IAAA,MAAM,EAAGiB,KAAD,IAAWF,MAAM,OAAO,IAAb,gBACf,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,YADe,gBAEf,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAACC,QAAAA,QAAQ,EAAE,QAAX;AAAqBC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAA5B;AAAd;AAAA;AAAA;AAAA;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAlCqBxB,Y;;KAAAA,Y","sourcesContent":["import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Route } from 'react-router-dom'\n//@ts-ignore\nexport default function PrivateRoute({ component: Component, ...rest }) {\n   //@ts-ignore\n    function readCookie(name: string) {\n        var nameEQ = name + \"=\";\n        var ca = document.cookie.split(';');\n        for(var i=0;i < ca.length;i++) {\n            var c = ca[i];\n            while (c.charAt(0)===' ') c = c.substring(1,c.length);\n            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\n        }\n        return null;\n      }\n  const token = readCookie('token');\n  \n    const authed = () => {\n        if (token !== null || token !== \"\") {\n            return true\n        }\n        else {\n        return false\n        }\n        \n    }\n    React.useEffect(() => {\n      authed()\n    }, [token])\n    return (\n      <Route\n        {...rest}\n        render={(props) => authed() === true\n          ? <Component {...props} />\n          : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n      />\n    )\n  }"]},"metadata":{},"sourceType":"module"}